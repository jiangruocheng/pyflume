#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import time
import traceback
import threading

from SimpleXMLRPCServer import SimpleXMLRPCServer

control = __import__('pyflumes.control').control
utils = __import__('pyflumes.utils').utils

SERVER = None
EXIT_FLAG = False


def _reimport():
    module_names = [k for k in sys.modules.keys() if k.startswith('pyflumes')]
    for module_name in module_names:
        sys.modules.pop(module_name)

    global control, utils
    control = __import__('pyflumes.control').control
    utils = __import__('pyflumes.utils').utils


def _register(server):
    global control
    for f in control.FUNCTIONS:
        server.register_function(f, f.__name__)


def func():
    global SERVER
    while True:
        try:
            inner_server = SimpleXMLRPCServer(('0.0.0.0', 12002), allow_none=True)
            inner_server.register_function(lambda : SERVER.shutdown() and SERVER.server_close(),
                                           'update')
            inner_server.serve_forever(None)
        except:
            print traceback.format_exc()

        time.sleep(30)


if __name__ == '__main__':
    # utils.daemonize()

    t = threading.Thread(target=func)
    t.start()

    while not EXIT_FLAG:
        SERVER = SimpleXMLRPCServer(("0.0.0.0", 12001))
        _register(SERVER)
        SERVER.serve_forever()
        SERVER.server_close()
        _reimport()
